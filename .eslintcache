[{"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/index.js":"1","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/App.js":"2","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/reportWebVitals.js":"3","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/utilities/nqueen.js":"4","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/checkerboard/checkerboard.js":"5","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/home/home.js":"6","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/checkerboard/n-queen-comp.js":"7","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/pathfinder.jsx":"8","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/grid.jsx":"9","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/menu.jsx":"10","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/navbar.jsx":"11","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/simpleSelect.jsx":"12","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/node.jsx":"13","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/algorithms/recursiveMaze.js":"14","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/algorithms/randomMaze.js":"15","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/algorithms/dijkstra.js":"16","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/algorithms/bfs.jsx":"17"},{"size":500,"mtime":1612637982000,"results":"18","hashOfConfig":"19"},{"size":679,"mtime":1669222545164,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1612637982000,"results":"21","hashOfConfig":"19"},{"size":1317,"mtime":1668692775588,"results":"22","hashOfConfig":"19"},{"size":1368,"mtime":1668692765656,"results":"23","hashOfConfig":"19"},{"size":735,"mtime":1669222705296,"results":"24","hashOfConfig":"19"},{"size":2196,"mtime":1669222050360,"results":"25","hashOfConfig":"19"},{"size":10409,"mtime":1669221768781,"results":"26","hashOfConfig":"19"},{"size":1390,"mtime":1653143418000,"results":"27","hashOfConfig":"19"},{"size":1247,"mtime":1653143418000,"results":"28","hashOfConfig":"19"},{"size":1036,"mtime":1669222171160,"results":"29","hashOfConfig":"19"},{"size":1646,"mtime":1669221586045,"results":"30","hashOfConfig":"19"},{"size":1186,"mtime":1653143418000,"results":"31","hashOfConfig":"19"},{"size":2807,"mtime":1653143418000,"results":"32","hashOfConfig":"19"},{"size":455,"mtime":1653143418000,"results":"33","hashOfConfig":"19"},{"size":2332,"mtime":1653143418000,"results":"34","hashOfConfig":"19"},{"size":1201,"mtime":1653143418000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1c9v8y1",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/index.js",[],["79","80"],"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/App.js",["81"],"import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Nqueen from \"./components/checkerboard/n-queen-comp\";\nimport Home from \"./components/home/home\";\nimport Pathfinder from \"./components/pathfinderComponents/pathfinder\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route exact path=\"/\" element={<Home />}></Route>\n          <Route exact path=\"/nqueen\" element={<Nqueen />}></Route>\n          <Route exact path=\"/paths\" element={<Pathfinder />}></Route>\n        </Routes>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/reportWebVitals.js",[],"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/utilities/nqueen.js",["82","83","84","85","86"],"export const nqueen = async (n, queenPos = [], col, setQueenPos) => {\n  console.log(queenPos.length, parseInt(n));\n  if (queenPos.length == parseInt(n)) {\n    console.log(queenPos);\n    return { solved: true, queenPos: queenPos };\n  }\n  for (let i = 0; i < n; i++) {\n    const newPos = { x: col, y: i };\n    const safeCheck = isSafe(queenPos, newPos);\n    if (safeCheck) {\n      queenPos.push(newPos);\n      setQueenPos([...queenPos]);\n      await sleep(1);\n      const res = await nqueen(n, queenPos, col + 1, setQueenPos);\n      if (res.solved) {\n        return res;\n      }\n\n      queenPos.pop();\n      await sleep(0.25);\n      setQueenPos([...queenPos]);\n    }\n  }\n  return { solved: false, queenPos: queenPos };\n};\nconst isSafe = (queenPos = [], newPos = {}) => {\n  for (let i = 0; i < queenPos.length; i++) {\n    const pos = queenPos[i];\n    if (isUnderAttack(newPos, pos)) {\n      return false;\n    }\n  }\n  return true;\n};\nconst isUnderAttack = (newPos, queenPosition) => {\n  const d1 = newPos.x - newPos.y;\n  const d2 = newPos.x + newPos.y;\n  return (\n    queenPosition.x == newPos.x ||\n    queenPosition.y == newPos.y ||\n    queenPosition.x + queenPosition.y == d2 ||\n    queenPosition.x - queenPosition.y == d1\n  );\n};\nfunction sleep(s) {\n  return new Promise((resolve) => setTimeout(resolve, s * 1000));\n}\n","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/checkerboard/checkerboard.js",["87","88"],"import React from \"react\";\nimport { useState } from \"react\";\nimport _ from \"lodash\";\nimport \"./chessboard.css\";\n\nexport const CheckerBoard = ({ size, queenPositions = [] }) => {\n  let checkerBoard = [];\n  for (let i = 0; i <= size; i++) {\n    let newRow = true;\n    for (let j = 0; j <= size; j++) {\n      let classNames = [\"block\"];\n      if (i == 0) {\n        classNames.push(\"chessColumnNumber\");\n        checkerBoard.push(\n          <div className={classNames.join(\" \")}>\n            <span className=\"coin\">{j - 1 < 0 ? \"\" : j - 1}</span>\n          </div>\n        );\n        continue;\n      }\n      if (newRow) {\n        classNames.push(\"clearRow\");\n        classNames.push(\"chessColumnNumber\");\n        newRow = false;\n        checkerBoard.push(\n          <div className={classNames.join(\" \")}>\n            <span className=\"coin\">{i - 1 < 0 ? \"\" : i - 1}</span>\n          </div>\n        );\n        continue;\n      }\n\n      classNames.push(\n        (i + j) % 2 === 0 ? \"chessColumnWhite\" : \"chessColumnBlack\"\n      );\n      const pos = { x: i - 1, y: j - 1 };\n      checkerBoard.push(\n        <div key={`check-${i}${j}`} className={classNames.join(\" \")}>\n          {_.find(queenPositions, pos) ? (\n            <span className=\"coin\">&#x2655;</span>\n          ) : (\n            <span></span>\n          )}\n        </div>\n      );\n    }\n  }\n  return checkerBoard;\n};\n","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/home/home.js",[],"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/checkerboard/n-queen-comp.js",[],"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/pathfinder.jsx",["89","90","91"],"import React, {Component, Fragment} from 'react';\nimport Grid from \"./grid\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\nimport {getMaze} from \"../algorithms/recursiveMaze\";\nimport {bfsdfs} from \"../algorithms/bfs\";\nimport {randomMaze} from \"../algorithms/randomMaze\";\nimport { createStyles, makeStyles } from '@mui/styles';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nclass Pathfinder extends Component {\n    constructor() {\n        super();\n        this.state = {\n            grid:[],\n            mouseIsPressed:false,\n            algorithms:[\n                \"Dijsktra\",\"BFS\",\"DFS\"\n            ],\n            algo:0,\n            mazes:[\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\n            ],\n            maze:0\n        }\n    }\n    componentDidMount() {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const row = Math.max(Math.floor(height/25)-7,10);\n        const col = Math.floor(width/25);\n        const startNode = {\n            row:4,\n            col:4\n        };\n        const endNode = {\n            row: row-5,\n            col: col-5\n        }\n        // console.log( endNode.row );\n        const grid = getInitialGrid(row,col);\n        grid[startNode.row][startNode.col].isStartNode = true;\n        grid[row-5][col-5].isEndNode = true;\n        this.setState({grid,row,col,startNode,endNode});\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme = {theme}>\n            <Fragment>\n                <Navbar/>\n\n                <Menu\n                    onAlgoChanged = {this.handleAlgoChanged}\n                    onVisualize = {this.handleClick}\n                    algorithms={this.state.algorithms}\n                    mazes={this.state.mazes}\n                    onMazeChanged={this.handleMazeChanged}\n                    onCreateMaze={this.handleCreateMaze}\n                    onClearBoard={this.handleClearBoard}\n                    onClearPath={this.handleClearPath}\n                />\n                <span style={{margin: 2}}/>\n                <div style={{textAlign:\"center\"}} >\n                    <Grid\n                        grid={this.state.grid}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseUp={this.handleMouseUp}\n                    />\n                </div>\n            </Fragment>\n            </ThemeProvider>\n        );\n    }\n\n    handleMouseDown = (row, col) => {\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n        this.setState({mouseIsPressed: true});\n    }\n\n    handleMouseEnter = (row, col) => {\n        if (this.state.mouseIsPressed === false) return;\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n    }\n\n    handleMouseUp = (row,col) => {\n        this.setState({mouseIsPressed: false});\n    }\n\n    handleAlgoChanged = (val) =>{\n        this.setState({algo:val});\n    }\n\n    handleMazeChanged = (val)=>{\n        this.setState({maze:val});\n    }\n\n    handleCreateMaze = () =>{\n        let pairs;\n        switch (this.state.maze){\n            case 1:\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\n                break;\n            default:\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\n        }\n        const {startNode,endNode} = this.state;\n        for( let i = 0;i<pairs.length;i++ ){\n            setTimeout(()=>{\n                if( i === pairs.length-1 ){\n                   // this.setState({grid:this.state.grid});\n                    const grid = this.state.grid;\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\n                    this.setState({grid});\n                }\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\n                }\n            },i*20);\n        }\n    }\n    handleClearBoard = ()=>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearBoard(grid,row,col)});\n    }\n    handleClearPath = () =>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearPath(grid,row,col)});\n    }\n    handleClick = () =>{\n      /*  for(let i = 0;i<20;i++){\n            for(let j = 0; j<50;j++){\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\n            }\n        }*/\n        this.visualizeDijkstra();\n        /*for(let i = 0;i<this.state.row;i++){\n            for(let j = 0; j<this.state.col;j++){\n                setTimeout(()=>{\n                    const newGrid = toggleVisit(this.state.grid,i,j);\n                    this.setState({grid:newGrid});\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\n                },100*(i+j)+j);\n            }\n        }*/\n    }\n\n    visualizeDijkstra() {\n        const {grid} = this.state;\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\n        let visitedNodesInOrder;\n        switch (this.state.algo){\n            case 0:\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n                break;\n            case 1:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\n                break;\n            default:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\n        }\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n\n            if (i === visitedNodesInOrder.length) {\n              //  setTimeout(() => {\n                    await sleep(100);\n                    await this.animateShortestPath(nodesInShortestPathOrder);\n\n              //  }, 10 * (i+10));\n                return;\n            }\n           // setTimeout(() => {\n                const node = visitedNodesInOrder[i];\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\n                //this.setState({grid:newGrid});\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-visited';\n                await sleep(10);\n           // }, 10 * i);\n        }\n    }\n\n    async animateShortestPath(nodesInShortestPathOrder) {\n        const grid = this.state.grid;\n        const newGrid = grid.slice();\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n         //   setTimeout(() => {\n\n                const node = nodesInShortestPathOrder[i];\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\n                newGrid[node.row][node.col] = newNode;\n                if( i === nodesInShortestPathOrder.length-1 ){\n                    this.setState({grid:newGrid});\n                }\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-shortest-path';\n                await sleep(50);\n            //}, 50 * i);\n        }\n    }\n\n}\n\nconst clearPath = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\nconst clearBoard = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                isWall: false,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\n\nconst toggleVisit = (grid,row,col) =>{\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        visitedNode: !node.visitedNode\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n}\nconst getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        isWall: true//!node.isWall,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n};\nconst getInitialGrid = (totRow,totCol) => {\n    const grid = [];\n    for (let row = 0; row < totRow; row++) {\n        const currentRow = [];\n        for (let col = 0; col < totCol; col++) {\n            currentRow.push(createNode(row,col));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n}\n\nconst createNode = (row,col)=>{\n    return {\n        row,\n        col,\n        isWall: false,\n        isStartNode:false,\n        isEndNode:false,\n        distance:Infinity,\n        visitedNode: false,\n        isVisited:false,\n        ispathNode:false,\n        previousNode:null\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Pathfinder;","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/grid.jsx",[],"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/menu.jsx",[],"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/navbar.jsx",["92"],"import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">ADA</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/simpleSelect.jsx",["93"],"import React from 'react';\nimport { createStyles, makeStyles } from '@mui/styles';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { InputLabel } from '@mui/material';\nimport { MenuItem } from '@mui/material';\n\nimport FormControl from '@mui/material/FormControl';\n\nimport { Select } from '@mui/material';\n\nconst theme = createTheme();\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        props.onAlgoChanged(event.target.value);\n    };\n\n    return (\n        <ThemeProvider theme = {theme}>\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    {props.items.map( (item,itemidx)=>{\n                        return(\n                            <MenuItem\n                                key={itemidx}\n                                value={itemidx}>{item}</MenuItem>\n                        );\n                    } )}\n                </Select>\n            </FormControl>\n        </div>\n        </ThemeProvider>\n    );\n}\n\nexport default SimpleSelect;","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/pathfinderComponents/node.jsx",["94"],"import React, {Component} from 'react';\nimport './node.css'\nclass Node extends Component {\n    static = {\n        row: this.props.row,\n        col: this.props.col\n    }\n    render() {\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\n        return (\n            <div\n                id = {`node-${this.props.row}-${this.props.col}`}\n                className={this.getClassName()}\n                onMouseDown={() => onMouseDown(row,col)}\n                onMouseEnter={() => onMouseEnter(row,col)}\n                onMouseUp={() => onMouseUp(row,col)}\n            />\n        );\n    }\n    getClassName(){\n        if(this.props.node.isWall === true){\n            return \"node node-wall\";\n        } else if( this.props.node.isStartNode === true ){\n            return \"node  node-start\";\n        } else if( this.props.node.isEndNode === true ){\n            return \"node  node-end\";\n        } else if(this.props.node.ispathNode){\n            return 'node node-shortest-path';\n        }else if( this.props.node.isVisited === true ){\n            return \"node  node-visited\";\n        } else{\n            return \"node\";\n        }\n    }\n}\n\nexport default Node;","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/algorithms/recursiveMaze.js",["95"],"export function getMaze(board,row,col){\n    const pairs = [];\n    let newBoard = board.slice();\n    for( let i = 0;i <col;i++){\n        newBoard[0][i].isWall = true;\n        pairs.push({\n            xx:0,\n            yy:i\n        });\n    }\n    for( let i = 0;i <row;i++){\n        newBoard[i][col-1].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:col-1\n        });\n    }\n    for( let i = col-1;i>=0;i-- ){\n        newBoard[row-1][i].isWall = true;\n        pairs.push({\n            xx:row-1,\n            yy:i\n        });\n    }\n    for(let i = row-1;i>=0;i--){\n        newBoard[i][0].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:0\n        });\n    }\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\n    //console.log(\"here\");\n    return pairs;\n}\nlet val = 0;\n\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\n    //console.log(\"count\");\n    val++;\n\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\n        return;\n    }\n\n     if( (endCol - startCol) > (endRow - startRow) ){\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\n    } else{\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\n    }\n}\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endCol+startCol)/2);\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\n    let start = startRow;\n    if( !board[startRow-1][mid].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endRow;\n    if( !board[endRow+1][mid].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[i][mid].isWall = true;\n            pairs.push({\n                xx:i,\n                yy:mid\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\n}\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endRow+startRow)/2);\n  //  console.log(\"mid: \",mid);\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\n    let start = startCol;\n    if( !board[mid][startCol-1].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endCol;\n    if( !board[mid][endCol+1].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[mid][i].isWall = true;\n            pairs.push({\n                xx:mid,\n                yy:i\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\n\n}","/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/algorithms/randomMaze.js",[],"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/algorithms/dijkstra.js",[],"/home/kts/Desktop/code/projects/ada/nqueen-backtracking-react-main/src/components/algorithms/bfs.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":3,"column":50,"nodeType":"102","messageId":"103","endLine":3,"endColumn":54},{"ruleId":"104","severity":1,"message":"105","line":3,"column":23,"nodeType":"106","messageId":"107","endLine":3,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":39,"column":21,"nodeType":"106","messageId":"107","endLine":39,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":40,"column":21,"nodeType":"106","messageId":"107","endLine":40,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":41,"column":39,"nodeType":"106","messageId":"107","endLine":41,"endColumn":41},{"ruleId":"104","severity":1,"message":"105","line":42,"column":39,"nodeType":"106","messageId":"107","endLine":42,"endColumn":41},{"ruleId":"100","severity":1,"message":"108","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":12,"column":13,"nodeType":"106","messageId":"107","endLine":12,"endColumn":15},{"ruleId":"100","severity":1,"message":"109","line":9,"column":10,"nodeType":"102","messageId":"103","endLine":9,"endColumn":22},{"ruleId":"100","severity":1,"message":"110","line":9,"column":24,"nodeType":"102","messageId":"103","endLine":9,"endColumn":34},{"ruleId":"100","severity":1,"message":"111","line":190,"column":23,"nodeType":"102","messageId":"103","endLine":190,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"109","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":22},{"ruleId":"100","severity":1,"message":"113","line":9,"column":25,"nodeType":"102","messageId":"103","endLine":9,"endColumn":34},{"ruleId":"100","severity":1,"message":"114","line":36,"column":5,"nodeType":"102","messageId":"103","endLine":36,"endColumn":8},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'newGrid' is assigned a value but never used.","'SimpleSelect' is defined but never used.","'isVisited' is assigned a value but never used.","'val' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]